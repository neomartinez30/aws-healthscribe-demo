{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Lambda resource stack creation using Amplify CLI",
    "Parameters": {
        "env": {
            "Type": "String"
        },
        "authRoleName": {
            "Type": "String"
        },
        "unauthRoleName": {
            "Type": "String"
        },
        "authhealthScribeDemoAuthUserPoolId": {
            "Type": "String"
        },
        "amplifyawshealthscribedemodevoauthRole": {
            "Type": "String",
            "Description": "Auth role for authenticated users"
        },
        "amplifyawshealthscribedemodevoauthRoleArn": {
            "Type": "String",
            "Description": "Auth role ARN for authenticated users"
        },
        "amplifyawshealthscribedemodevoauthRoleName": {
            "Type": "String",
            "Description": "Auth role name for authenticated users"
        },
        "amplifyawshealthscribedevodevoauthRole": {
            "Type": "String",
            "Description": "Auth role for development authenticated users"
        },
        "amplifyawshealthscribedevodevoauthRoleArn": {
            "Type": "String",
            "Description": "Auth role ARN for development authenticated users"
        },
        "amplifyawshealthscribedevodevoauthRoleName": {
            "Type": "String",
            "Description": "Auth role name for development authenticated users"
        }
    },
    "Conditions": {
        "ShouldNotCreateEnvResources": {
            "Fn::Equals": [
                {
                    "Ref": "env"
                },
                "NONE"
            ]
        }
    },
    "Resources": {
        "LambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Handler": "index.handler",
                "FunctionName": {
                    "Fn::If": [
                        "ShouldNotCreateEnvResources",
                        "AdminQueries",
                        {
                            "Fn::Join": [
                                "",
                                [
                                    "AdminQueries",
                                    "-",
                                    {
                                        "Ref": "env"
                                    }
                                ]
                            ]
                        }
                    ]
                },
                "Environment": {
                    "Variables": {
                        "ENV": {
                            "Ref": "env"
                        },
                        "GROUP": "Admin",
                        "USERPOOL": {
                            "Ref": "authhealthScribeDemoAuthUserPoolId"
                        },
                        "AUTH_ROLE_NAME": {
                            "Ref": "amplifyawshealthscribedevodevoauthRoleName"
                        },
                        "UNAUTH_ROLE_NAME": {
                            "Ref": "unauthRoleName"
                        }
                    }
                },
                "Role": {
                    "Fn::GetAtt": [
                        "LambdaExecutionRole",
                        "Arn"
                    ]
                },
                "Runtime": "nodejs18.x",
                "Timeout": 25
            }
        },
        "LambdaExecutionRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "RoleName": {
                    "Fn::If": [
                        "ShouldNotCreateEnvResources",
                        "AdminQueriesRole",
                        {
                            "Fn::Join": [
                                "",
                                [
                                    "AdminQueriesRole",
                                    "-",
                                    {
                                        "Ref": "env"
                                    }
                                ]
                            ]
                        }
                    ]
                },
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Policies": [
                    {
                        "PolicyName": "AdminQueriesLambdaPolicy",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                    ],
                                    "Resource": "arn:aws:logs:*:*:*"
                                }
                            ]
                        }
                    }
                ]
            }
        }
    },
    "Outputs": {
        "Name": {
            "Value": {
                "Ref": "LambdaFunction"
            }
        },
        "Arn": {
            "Value": {
                "Fn::GetAtt": [
                    "LambdaFunction",
                    "Arn"
                ]
            }
        },
        "Region": {
            "Value": {
                "Ref": "AWS::Region"
            }
        },
        "LambdaExecutionRole": {
            "Value": {
                "Ref": "LambdaExecutionRole"
            }
        },
        "LambdaExecutionRoleArn": {
            "Value": {
                "Fn::GetAtt": [
                    "LambdaExecutionRole",
                    "Arn"
                ]
            }
        }
    }
}